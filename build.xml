<?xml version="1.0" encoding="UTF-8" ?>
<project name="war" basedir="." default="startup" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
    <!-- class目录 -->
    <property name="classes" value="ant/classes"/>
    <!-- war存放目录 -->
    <property name="target" value="target"/>
    <!-- lib目录 -->
    <property name="lib" value="web/WEB-INF/lib"/>
    <!-- 指定war包名称 -->
    <property name="war.name" value="ANT"/>

    <!-- 删除目录 -->
    <target name="deleteDir">
        <echo message="删除原目录......"/>

        <!-- 删除原目录 -->
        <delete dir="ant"/>
        <delete dir="${lib}"/>

        <!-- 删除原有war包 -->
        <delete file="${target}/${war.name}.war"/>
    </target>

    <!-- 创建目录 -->
    <target name="newDir" depends="deleteDir">
        <echo message="创建新目录......"/>

        <!-- 创建新目录 -->
        <mkdir dir="${classes}"/>
        <mkdir dir="${lib}"/>
    </target>

    <!-- 从Maven获取jar -->
    <target name="getJar" depends="newDir">
        <!-- 加入ant对maven支持 -->
        <path id="maven-ant-tasks.classpath" path="maven-ant-tasks-2.1.3.jar"/>
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
                 uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath"/>

        <artifact:pom id="maven.project" file="pom.xml"/>
        <artifact:dependencies pathid="maven.classpath" filesetid="maven.fileset">
            <pom refid="maven.project"/>
        </artifact:dependencies>

        <echo message="复制jar......"/>

        <!-- 复制jar -->
        <copy todir="${lib}">
            <fileset refid="maven.fileset"/>
            <mapper type="flatten"/>
        </copy>
    </target>

    <!-- 指定编译所需jar包路径 -->
    <path id="class.path">
        <fileset dir="${lib}" includes="*.jar"/>
    </path>

    <!-- 编译并存放到class目录 -->
    <target name="compile" depends="getJar">
        <echo message="开始编译......"/>
        <javac srcdir="src/main/java" destdir="${classes}">
            <!-- 指定编码 -->
            <compilerarg line="-encoding UTF-8"/>
            <!-- 指定依赖库路径 -->
            <classpath refid="class.path"/>
        </javac>

        <!-- 拷贝配置文件 -->
        <copy todir="${classes}">
            <fileset dir="src/main/resources">
                <include name="*"/>
            </fileset>
        </copy>
    </target>

    <!-- 打war包 -->
    <target name="getWar" depends="compile">
        <!-- 指定war存放目录、web.xml位置 -->
        <war destfile="${target}/${war.name}.war" webxml="web/WEB-INF/web.xml">
            <!-- 复制web下的jsp文件 -->
            <fileset dir="web">
                <include name="**/**.*"/>
                <exclude name="**/*.jar"/>
                <exclude name="**/*.class"/>
            </fileset>
            <!-- 存放class -->
            <classes dir="${classes}"/>
            <!-- 获取lib -->
            <lib dir="${lib}"/>
        </war>
    </target>

    <!-- tomcat目录 -->
    <property name="tomcat.path" value="D:\apache-tomcat-8.0.45\apache-tomcat-8.0.45"/>

    <!-- 部署tomcat -->
    <target name="deploy" depends="getWar" description="deploy to tomcat 8.0">
        <!-- 删除原有的war -->
        <delete file="${tomcat.path}\webapps\ANT.war"/>
        <!-- 复制war包至tomcat目录下 -->
        <copy todir="${tomcat.path}\webapps">
            <fileset dir="${target}">
                <include name="**/*.war"/>
            </fileset>
        </copy>
    </target>

    <!-- 启动tomcat -->
    <target name="startup" depends="deploy" description="startup tomcat">
        <exec dir="${tomcat.path}" executable="cmd.exe" >
            <arg line="/c ${tomcat.path}/bin/startup.bat" />
            <arg line="/c exit" />
        </exec>
    </target>

    <!-- 停止tomcat -->
    <target name="shutdown">
        <exec dir="${tomcat.path}" executable="cmd.exe" >
            <arg line="/c ${tomcat.path}/bin/shutdown.bat" />
        </exec>
    </target>

    <!-- IDEA控制台输出tomcat启动信息 -->
    <!--<target name="startup">-->
        <!--<java classname="org.apache.catalina.startup.Bootstrap" spawn="yes" fork="true">-->
            <!--<jvmarg value="-Dcatalina.home=${tomcat.path}"/>-->
            <!--<classpath>-->
                <!--<pathelement path="${java.path}\lib\tools.jar"/>-->
                <!--<fileset dir="${tomcat.path}">-->
                    <!--<include name="bin\bootstrap.jar"/>-->
                <!--</fileset>-->
            <!--</classpath>-->
        <!--</java>-->
    <!--</target>-->
</project>